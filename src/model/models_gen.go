// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"fmt"
	"io"
	"strconv"
)

type Brand struct {
	ID            string `json:"ID" bson:"_id"`
	Name          string `json:"name"`
	Description   string `json:"description"`
	Brandimageurl string `json:"brandimageurl"`
}

type Category struct {
	ID               string       `json:"ID" bson:"_id"`
	Label            string       `json:"label"`
	Name             CategoryEnum `json:"name"`
	Categoryimageurl string       `json:"categoryimageurl"`
}

type Product struct {
	ID          string    `json:"ID" bson:"_id"`
	Name        string    `json:"name"`
	Imageurl    string    `json:"imageurl"`
	Price       int       `json:"price"`
	Brand       *Brand    `json:"brand" bson:"brand"`
	Producturl  string    `json:"mallproducturl" bson:"producturl"`
	Deliveryfee string    `json:"deliveryfee"`
	Category    *Category `json:"category" bson:"category"`
}

type ProductsInput struct {
	Offset   int           `json:"offset"`
	Limit    int           `json:"limit"`
	Category *CategoryEnum `json:"category"`
	Brand    *string       `json:"brand"`
}

type CategoryEnum string

const (
	CategoryEnumHamultang       CategoryEnum = "Hamultang"
	CategoryEnumYukgyejang      CategoryEnum = "Yukgyejang"
	CategoryEnumMaratang        CategoryEnum = "Maratang"
	CategoryEnumDuonjangzzigye  CategoryEnum = "Duonjangzzigye"
	CategoryEnumKimchizzigye    CategoryEnum = "Kimchizzigye"
	CategoryEnumGambas          CategoryEnum = "Gambas"
	CategoryEnumEtcjeongol      CategoryEnum = "Etcjeongol"
	CategoryEnumSteak           CategoryEnum = "Steak"
	CategoryEnumGogi            CategoryEnum = "Gogi"
	CategoryEnumUmooktang       CategoryEnum = "Umooktang"
	CategoryEnumChurtang        CategoryEnum = "Churtang"
	CategoryEnumBibbimbap       CategoryEnum = "Bibbimbap"
	CategoryEnumGobchangjeongol CategoryEnum = "Gobchangjeongol"
	CategoryEnumChunggukjang    CategoryEnum = "Chunggukjang"
	CategoryEnumBudaezzigye     CategoryEnum = "Budaezzigye"
	CategoryEnumEtc             CategoryEnum = "Etc"
	CategoryEnumAltang          CategoryEnum = "Altang"
	CategoryEnumMyun            CategoryEnum = "Myun"
	CategoryEnumMillefeuille    CategoryEnum = "Millefeuille"
	CategoryEnumUguzytang       CategoryEnum = "Uguzytang"
	CategoryEnumBunsik          CategoryEnum = "Bunsik"
	CategoryEnumPasta           CategoryEnum = "Pasta"
	CategoryEnumSundubuzzigye   CategoryEnum = "Sundubuzzigye"
	CategoryEnumKongbeasyzzigye CategoryEnum = "Kongbeasyzzigye"
	CategoryEnumBokumzzim       CategoryEnum = "Bokumzzim"
)

var AllCategoryEnum = []CategoryEnum{
	CategoryEnumHamultang,
	CategoryEnumYukgyejang,
	CategoryEnumMaratang,
	CategoryEnumDuonjangzzigye,
	CategoryEnumKimchizzigye,
	CategoryEnumGambas,
	CategoryEnumEtcjeongol,
	CategoryEnumSteak,
	CategoryEnumGogi,
	CategoryEnumUmooktang,
	CategoryEnumChurtang,
	CategoryEnumBibbimbap,
	CategoryEnumGobchangjeongol,
	CategoryEnumChunggukjang,
	CategoryEnumBudaezzigye,
	CategoryEnumEtc,
	CategoryEnumAltang,
	CategoryEnumMyun,
	CategoryEnumMillefeuille,
	CategoryEnumUguzytang,
	CategoryEnumBunsik,
	CategoryEnumPasta,
	CategoryEnumSundubuzzigye,
	CategoryEnumKongbeasyzzigye,
	CategoryEnumBokumzzim,
}

func (e CategoryEnum) IsValid() bool {
	switch e {
	case CategoryEnumHamultang, CategoryEnumYukgyejang, CategoryEnumMaratang, CategoryEnumDuonjangzzigye, CategoryEnumKimchizzigye, CategoryEnumGambas, CategoryEnumEtcjeongol, CategoryEnumSteak, CategoryEnumGogi, CategoryEnumUmooktang, CategoryEnumChurtang, CategoryEnumBibbimbap, CategoryEnumGobchangjeongol, CategoryEnumChunggukjang, CategoryEnumBudaezzigye, CategoryEnumEtc, CategoryEnumAltang, CategoryEnumMyun, CategoryEnumMillefeuille, CategoryEnumUguzytang, CategoryEnumBunsik, CategoryEnumPasta, CategoryEnumSundubuzzigye, CategoryEnumKongbeasyzzigye, CategoryEnumBokumzzim:
		return true
	}
	return false
}

func (e CategoryEnum) String() string {
	return string(e)
}

func (e *CategoryEnum) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = CategoryEnum(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid CategoryEnum", str)
	}
	return nil
}

func (e CategoryEnum) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
